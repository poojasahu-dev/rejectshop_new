//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.07.05 at 06:07:27 PM IST 
//


package au.com.rejectshop.xml.store.beans;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PriceTypeCodeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PriceTypeCodeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="UnitCostPrice"/>
 *     &lt;enumeration value="UnitListPrice"/>
 *     &lt;enumeration value="RegularSalesUnitPrice"/>
 *     &lt;enumeration value="InventoryValuePrice"/>
 *     &lt;enumeration value="SuggestedRetailPrice"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PriceTypeCodeEnumeration")
@XmlEnum
public enum PriceTypeCodeEnumeration {

    @XmlEnumValue("UnitCostPrice")
    UNIT_COST_PRICE("UnitCostPrice"),
    @XmlEnumValue("UnitListPrice")
    UNIT_LIST_PRICE("UnitListPrice"),
    @XmlEnumValue("RegularSalesUnitPrice")
    REGULAR_SALES_UNIT_PRICE("RegularSalesUnitPrice"),
    @XmlEnumValue("InventoryValuePrice")
    INVENTORY_VALUE_PRICE("InventoryValuePrice"),
    @XmlEnumValue("SuggestedRetailPrice")
    SUGGESTED_RETAIL_PRICE("SuggestedRetailPrice");
    private final String value;

    PriceTypeCodeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PriceTypeCodeEnumeration fromValue(String v) {
        for (PriceTypeCodeEnumeration c: PriceTypeCodeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
