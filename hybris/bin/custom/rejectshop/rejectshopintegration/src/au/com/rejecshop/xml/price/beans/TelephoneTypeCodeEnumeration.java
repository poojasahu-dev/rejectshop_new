//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.24 at 01:03:43 PM IST 
//


package au.com.rejecshop.xml.price.beans;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TelephoneTypeCodeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TelephoneTypeCodeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="Home"/>
 *     &lt;enumeration value="Home2"/>
 *     &lt;enumeration value="Mobile"/>
 *     &lt;enumeration value="Work"/>
 *     &lt;enumeration value="Work2"/>
 *     &lt;enumeration value="WorkFax"/>
 *     &lt;enumeration value="HomeFax"/>
 *     &lt;enumeration value="Pager"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TelephoneTypeCodeEnumeration")
@XmlEnum
public enum TelephoneTypeCodeEnumeration {

    @XmlEnumValue("Home")
    HOME("Home"),
    @XmlEnumValue("Home2")
    HOME_2("Home2"),
    @XmlEnumValue("Mobile")
    MOBILE("Mobile"),
    @XmlEnumValue("Work")
    WORK("Work"),
    @XmlEnumValue("Work2")
    WORK_2("Work2"),
    @XmlEnumValue("WorkFax")
    WORK_FAX("WorkFax"),
    @XmlEnumValue("HomeFax")
    HOME_FAX("HomeFax"),
    @XmlEnumValue("Pager")
    PAGER("Pager");
    private final String value;

    TelephoneTypeCodeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TelephoneTypeCodeEnumeration fromValue(String v) {
        for (TelephoneTypeCodeEnumeration c: TelephoneTypeCodeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
